Object subclass: #Cart	instanceVariableNames: 'items catalog'	classVariableNames: ''	poolDictionaries: ''	category: 'TusLibros'!!Cart methodsFor: 'adding' stamp: 'mg 10/26/2017 21:15'!numberOfProducts	| quantity |	quantity := 0 .	items valuesDo: [ :aBookQuantity | quantity := quantity + aBookQuantity ] .	^ quantity .! !!Cart methodsFor: 'adding' stamp: 'mg 10/30/2017 18:15'!add: aBook quantity: aQuantity	(self contains: aBook) ifFalse: [ self error: Cart bookNotInCatalog ] .		items add: (Association key: aBook value: aQuantity ) .	! !!Cart methodsFor: 'adding' stamp: 'mg 10/30/2017 18:08'!contains: aBook	catalog indexOf: aBook ifAbsent: [ ^ false ].	^ true .! !!Cart methodsFor: 'adding' stamp: 'mg 10/30/2017 18:13'!initializeWith: aCatalog	catalog := aCatalog .	items := Dictionary new.! !!Cart methodsFor: 'adding' stamp: 'mg 10/30/2017 18:23'!numberOfProduct: aProduct	^ items at: aProduct  .! !!Cart methodsFor: 'adding' stamp: 'Guerson 11/5/2017 13:22'!isEmpty	^ (self numberOfProducts) = 0 .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cart class	instanceVariableNames: ''!!Cart class methodsFor: 'instance creation' stamp: 'mg 10/26/2017 20:39'!bookNotInCatalog	^ 'El producto no está en el catálogo' .! !!Cart class methodsFor: 'instance creation' stamp: 'mg 10/26/2017 20:30'!withCatalog: aCatalog	^super new initializeWith: aCatalog  .! !Object subclass: #Cashier	instanceVariableNames: 'cart creditCard date salesBook'	classVariableNames: ''	poolDictionaries: ''	category: 'TusLibros'!!Cashier methodsFor: 'initialization' stamp: 'mg 10/30/2017 20:52'!initializeFor: aCart debit: aCreditCard at: aDate registerOn: aSalesBook 	cart := aCart .	creditCard :=aCreditCard .	date := aDate .	salesBook := aSalesBook .! !!Cashier methodsFor: 'operations' stamp: 'Guerson 11/5/2017 13:20'!checkout	cart numberOfProducts = 0 ifTrue: [ ^ self error: Cashier cartIsEmpty  ].	(creditCard isExpiredAt: (Date current) ) ifTrue: [ ^ self error: Cashier creditCardIsOutdated ].	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cashier class	instanceVariableNames: ''!!Cashier class methodsFor: 'as yet unclassified' stamp: 'mg 10/30/2017 18:47'!cartIsEmpty	^ 'Cart is empty'.! !!Cashier class methodsFor: 'as yet unclassified' stamp: 'mg 10/30/2017 19:17'!creditCardIsOutdated	^ 'Credit card is outdated'.! !!Cashier class methodsFor: 'as yet unclassified' stamp: 'mg 10/30/2017 20:51'!charge: aCart debit: aCreditCard at: aDate registerOn: aSalesBook		^ (super new) initializeFor: aCart debit: aCreditCard at: aDate registerOn: aSalesBook . ! !Object subclass: #CreditCard	instanceVariableNames: 'validDate ccn number expirationDate'	classVariableNames: ''	poolDictionaries: ''	category: 'TusLibros'!!CreditCard methodsFor: 'initialization' stamp: 'Guerson 11/5/2017 13:21'!isExpiredAt: aDate	^ expirationDate < aDate .! !!CreditCard methodsFor: 'initialization' stamp: 'Guerson 11/5/2017 13:08'!initializeWithNumber: aNumber validTo: anExpirationDate	number := aNumber .	expirationDate := anExpirationDate .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CreditCard class	instanceVariableNames: ''!!CreditCard class methodsFor: 'as yet unclassified' stamp: 'Guerson 11/5/2017 13:09'!withNumber: aNumber validTo: anExpirationDate	^ super new initializeWithNumber: aNumber validTo: anExpirationDate .! !TestCase subclass: #TusLibrosTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TusLibros'!!TusLibrosTests methodsFor: 'tests' stamp: 'mg 10/30/2017 18:14'!test02AddProductMakesNonEmptyCart	| aCart aBook aQuantity aCatalog |	aBook := #book123.	aCatalog := OrderedCollection with: aBook .	aCart := Cart withCatalog: aCatalog.	aQuantity := 2 .	aCart add: aBook quantity: aQuantity .		self deny: aCart numberOfProducts = 0.	self assert: aCart numberOfProducts equals: aQuantity .! !!TusLibrosTests methodsFor: 'tests' stamp: 'Guerson 11/5/2017 13:11'!test05CannotCheckoutEmptyCart	| aCart aCatalog aCashier aCreditCard aSalesBook |		aCatalog := OrderedCollection new .	aCart := Cart withCatalog: aCatalog .	aCreditCard :=  self aValidCreditCard.	aSalesBook := OrderedCollection new .	aCashier := Cashier charge: aCart debit: aCreditCard at: (Date today) registerOn: aSalesBook .		self
		should: [ aCashier checkout]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier cartIsEmpty .			self assert: aCart isEmpty . 			self assert: aSalesBook isEmpty . ]	! !!TusLibrosTests methodsFor: 'tests' stamp: 'Guerson 11/5/2017 13:10'!anOutdatedCreditCard	^ CreditCard withNumber: '5400 1234 5678 9999' validTo: Date yesterday.! !!TusLibrosTests methodsFor: 'tests' stamp: 'Guerson 11/5/2017 13:22'!test06CannotCheckoutOutdatedCreditCard| aBook aCart aCatalog aCashier aCreditCard aSalesBook aQuantity |		aBook := #book123.	aQuantity := 2 .	aCatalog := OrderedCollection with: aBook .	aCart := Cart withCatalog: aCatalog .	aCart add: aBook quantity: aQuantity .	aCreditCard :=  self anOutdatedCreditCard .	aSalesBook := OrderedCollection new .	aCashier := Cashier charge: aCart debit: aCreditCard at: (Date today) registerOn: aSalesBook .		self
		should: [ aCashier checkout]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardIsOutdated .			self assert: aCart numberOfProducts = aQuantity . 			self assert: aSalesBook isEmpty . ]! !!TusLibrosTests methodsFor: 'tests' stamp: 'mg 10/30/2017 18:15'!test03CannotAddProductThatIsNotFromThisEditorial	| aCart aBook aQuantity aCatalog |		aBook := #book123.	aCatalog := OrderedCollection new .	aCart := Cart withCatalog: aCatalog .	aQuantity := 2 .		self
		should: [ aCart add: aBook quantity: aQuantity ]
		raise: Error 
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart bookNotInCatalog ]! !!TusLibrosTests methodsFor: 'tests' stamp: 'Guerson 11/5/2017 13:09'!aValidCreditCard	^ CreditCard withNumber: '5400 1234 5678 9999' validTo: Date today.! !!TusLibrosTests methodsFor: 'tests' stamp: 'Guerson 11/5/2017 13:22'!test01NewCartIsEmpty	| aCart aCatalog |	aCatalog := OrderedCollection new .	aCart := Cart withCatalog: aCatalog .		self assert: aCart isEmpty .! !!TusLibrosTests methodsFor: 'tests' stamp: 'mg 10/30/2017 18:21'!test04addMultipleValidBooks	| aCart aBook otherBook aQuantity otherQuantity aCatalog |		aBook := #book123.	otherBook := #book456.	aCatalog := OrderedCollection with: aBook with: otherBook .	aCart := Cart withCatalog: aCatalog .	aQuantity := 2 .	otherQuantity := 5.		aCart add: aBook quantity: aQuantity .	aCart add: otherBook  quantity: otherQuantity .		self assert: aCart numberOfProducts equals: (aQuantity + otherQuantity ) .	self assert: (aCart numberOfProduct: aBook) equals: aQuantity .	self assert: (aCart numberOfProduct: otherBook ) equals: otherQuantity  .! !